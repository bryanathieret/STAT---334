---
title: "Section 6: Mapping Data"
format:
  html:
    embed-resources: true
    echo: false
    warning: false
    message: false
documentclass: article
author: "Bryana A. S. Thieret"
mainfont: "Cambria"
monofont: "Cambria"
---

## 6.1: Mapping Introduction  

### 6.1.1: Do We Need a Map?  

See $\rightarrow$ **Section 7.5 of the data visualization textbook**  

### 6.1.2: Mapping Common Areas  
* In order to create a map of some area, we need to in some way tell R how to draw the boundaries for that area.  


```{r}
library(maps)
library(tidyverse)
state_df <- ggplot2::map_data("state")
```

* To have R draw the map, we just need a new `geom`: `geom_polygon()` and a group `aes()` to tell R how to draw the boundaries:  

```{r}
ggplot(data = state_df,
            mapping = aes(x = long, y = lat,
                          group = group)) +
  geom_polygon() 

ggplot(data = state_df,
            mapping = aes(x = long, y = lat,
                          group = group)) +
  geom_polygon(colour = "black", fill = "white") +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  theme_void()
```

* Now that we've created a base map, we probably want to add a variable to fill by to examine patterns across the states. The resulting map is sometimes called a "choropleth" map.   


```{r}
library(usdata)
state_stats <- state_stats |> mutate(state = str_to_lower(state))
state_full <- left_join(state_df, state_stats, by = c("region" = "state"))

ggplot(data = state_full, aes(x = long, y = lat, group = group)) +
  geom_polygon(colour = "black", aes(fill = coal)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  theme_void() +
  scale_fill_viridis_b()
```

**Exercise 1:** The reading gave one example where the “best” graph to show would not be a map. Think of a second example where, even though the data is spatial, the best graph to make a particular argument would not be a map.  

* A very specific example is the amount of money schools allocate per student by state. This would be problematic and wrong because school funding is not by state but rather through income taxes which means whatever the value is that is shown is an average.   


**Exercise 2:** Refer back the United States examples that we completed. Choose a variable or two variables where a map makes the most sense to visualize that variable and explain your reasoning. Then, choose a variable or two variables where you might make a plot other than a map and explain your reasoning for why the map makes less sense for this variable.

* I think the variable `homeownership` would be a good variable to visualize on the map because its a percentage which is easy to view on a map (i.e., not too many color variations) whereas variables like `murder` or `robbery` (given that I don't have much context) don't appear to be adjusted to population size. In addition, it might not be very accurate to group these variables by state and rather should be grouped by county.  

**Exercise 3:** Which states had the fastest growth rate between 2000 and 2010? Make a variable for the percent change in population and then map this variable.  

```{r}
rate = state_full |> mutate(Rate = pop2000/pop2010)

ggplot(data = rate, aes(x = long, y = lat, group = group)) +
  geom_polygon(colour = "black", aes(fill = Rate)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  theme_void() +
  scale_fill_viridis_b()
```


**Exercise 4:** To your map in Exercise 1, think about which type of colour scale makes the most sense to use (sequential, diverging, or unordered). Change the colour scale to match what makes the most sense.  

* I think sequential makes the most sense in this case with the values that we have especially because none of them are above 1.  

```{r}
ggplot(data = rate, aes(x = long, y = lat, group = group)) +
  geom_polygon(colour = "black", aes(fill = Rate)) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  theme_void() +
  scale_fill_viridis_b()
```


You may have noticed a couple of additional problems in the United States maps we made in the previous section.  

1. We ignored Alaska and Hawaii. Putting these on the map in their geographic locations would result in a tiny continental United States map that would be harder to read.  

2. Some states in the Northeast are so small that their fill values are hard to read.  

Both of these issues can be challenging to address. It is common to put Hawaii and Alaska in a corner of the plot, even though their latitude and longitude values do not match. Sometimes Alaska is made to be smaller than its true size as well. The smaller Northeastern states is a more challenging problem. This is beyond the time we have to devote to maps in this course, but a hexbin map can help with both of these issues.

_-------------------------------------------------------------------------------------_

## 6.2: Mapping Other Areas: `sf` Objects   

```{r}
active <- read_csv("https://raw.githubusercontent.com/iramler/stlawu_covid/main/slc_towns_active_cases.csv", n_max = 34)
tcases <- read_csv("https://raw.githubusercontent.com/iramler/stlawu_covid/main/slc_towns_total_cases.csv", n_max = 34)

active_long <- active |> pivot_longer(5:ncol(active), names_to = "date",
                                       values_to = "cases")
## repeat for total cases
tcases_long <- tcases |> pivot_longer(5:ncol(tcases), names_to = "date",
                                       values_to = "cases")

library(lubridate)
covid_df <- left_join(tcases_long, active_long,
                      by = c("date", "Order", "NAME")) |>
  mutate(date = mdy(date)) |>
  rename(total_cases = cases.x,
         active_cases = cases.y) |>
  mutate(total_cases = if_else(is.na(total_cases),
                               true = 0, false = total_cases),
         active_cases = if_else(is.na(active_cases),
                                      true = 0, false = active_cases))
  

covid_SLC <- covid_df |> filter(NAME == "St. Lawrence County")
covid_sub <- covid_df |> filter(NAME != "St. Lawrence County")
```


Exercise 1. Make a line plot that shows the number of active_cases in all of St. Lawrence County over time.

```{r}
covid_SLC |> ggplot(aes(y = active_cases, x = date)) + geom_line()
```

But suppose that we now want to make a map of the current day’s active cases in the subregions of SLC. We need to tell R how to draw the lines that define the different subregions of SLC. To do so, we need to provide R with a shapefile that has directions on how to draw the spatial polygons.


```{r}
## install.packages("sf")
library(sf)
library(here)
shp <- read_sf("Section Notes/data/slc.shp") |>
  st_transform(st_crs("+proj=longlat"))
```


```{r}
ggplot(data = shp) +
  geom_sf() +
  theme_void()

full_df <- left_join(shp, covid_sub, by = "NAME") |>
  filter(date == max(date)) ## only plot cases on the most recent date

ggplot(data = full_df) +
  geom_sf(aes(fill = active_cases)) +
  theme_void()
```


**Exercise 2:** Change the fill scale of the plot. Should you use an unordered, sequential, or diverging scale?  

```{r}
ggplot(data = full_df) +
  geom_sf(aes(fill = active_cases)) +
  theme_void() +
  scale_fill_distiller(palette = 3)
```

* When you bin you lose some of the information, but it results in a simpler plot.  

**Exercise 3:** Change the colour scale so that active_cases are put into different bins with scale_fill_viridis_b(). What are some advantages and disadvantages of this?

```{r}
ggplot(data = full_df) +
  geom_sf(aes(fill = active_cases)) +
  theme_void() +
  scale_fill_viridis_b()
```



**Exercise 4:** Explore the ?geom_sf_text() function and add the actual number of cases to the subregions in the plot, as was done on the SLC website.


_-------------------------------------------------------------------------------------_

## 6.3: Your Turn  

```{r}
library(tidyverse)
library(here)
hpi_df <- read_csv(here("Section Notes/data/hpi-tidy.csv"))
```


**Exercise 1:** Make a map of a variable of your choosing. In coord_map(), use projection = "mercator", which is also the default (we will see in a later exercise that this probably is not the best choice).

Hint: in ggplot2’s map_data() function, there is a built in map of the "world".

Hint: You can read more about projections in Section 17.3.2 of Modern Data Science with R

```{r}
world_df = map_data("world")
world_df = left_join(world_df, hpi_df, by = c("region" = "Country"))

world_df |> ggplot(aes(x = long, y = lat, group = group, fill = Wellbeing)) +
  geom_polygon() + 
  coord_map(projection = "mercator") +
  scale_fill_distiller(palette = 3)

```



Exercise 2. You may notice that the United States does not get coloured in your map. Examine this issue further and fix the map so that the United States is coloured.  
* It is coded as different names so when they were merged the name disappeared.  

```{r}
hpi_df = hpi_df |> mutate(Coutnry = fct_recode(Country, "USA" = "United States of America"))
world_df = left_join(world_df, hpi_df, by = c("region" = "Country"))

world_df |> ggplot(aes(x = long, y = lat, group = group, fill = Wellbeing)) +
  geom_polygon() + 
  coord_map(projection = "mercator", xlim = c(-180, 180)) +
  scale_fill_distiller(palette = 3)
```


Exercise 3. You may have noticed that there are two horizontal stripes across your map. This is an issue that drove me nuts! Check out this submitted issue on ggplot2’s GitHub page for the reason for the error as well as a fix. Use it to fix your plot.

```{r}
world_df |> ggplot(aes(x = long, y = lat, group = group, fill = Wellbeing)) +
  geom_polygon() + 
  coord_map(projection = "mercator", xlim = c(-180, 180)) +
  scale_fill_distiller(palette = 3)
```


Exercise 4. Read about Mercator projections in this blog post. What does this source say about the sizes of Greenland vs. Africa in a Mercator projection?


Exercise 5. Examine all of the different options for map projection with ?mapproject. Then, change the projection to "globular". Change the projection again to "gilbert". How does the relative size of Greenland to Africa change in the projections?



